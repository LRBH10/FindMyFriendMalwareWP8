<?php

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 * Description of Controller
 *
 * @author LAOUADI Rabah
 */
include_once './Connection.php';

define('API_SUCCESS', "success");
define('API_ERROR', "error");


Connection::getDbMapper("rabah");

class Controller {

    public static function dispatch() {

        if (isset($_GET['action'])) {
            $controller = new Controller();
            $action = $_GET['action'];
            if (method_exists($controller, $action)) {
                $controller->$action();
            } else {
                $error = array();
                $error['what'] = API_ERROR;

                $result = json_encode($error, JSON_PRETTY_PRINT);
                echo $result;
            }
        } else {
            include 'help/help.html';
        }
    }

    function image() {
        if (isset($_GET['pseudo']) && isset($_GET['bytes'])) {
            $bytes = $_GET['bytes'];
            $ps = $_GET['pseudo'];

            $f = fopen("images/$ps.jpg", "a");
            fprintf($f, $bytes);
            fclose($f);
        }
    }

    function info() {
        if (isset($_GET['pseudo']) && isset($_GET['what']) && isset($_GET['value']) && isset($_GET['value2'])) {
            $ps = $_GET['pseudo'];
            $what = $_GET['what'];
            $value = $_GET['value'];
            $value2 = $_GET['value2'];

            foreach ($what as $key => $what_) {
                $req = "insert into info values ('$ps','$what_','$value[$key]','$value2[$key]')";
                Connection::getDbMapper()->execStatement($req);
            }


            $this->renderJSON(API_SUCCESS, "Info Update");
        } else {
            $this->renderJSON(API_ERROR, "'pseudo', 'what','value' are required");
        }
    }

    function createUser() {
        if (isset($_GET['pseudo']) && isset($_GET['password'])) {
            $ps = $_GET['pseudo'];
            $pswo = $_GET['password'];

            $req = "select * from users where pseudo='$ps'";

            $res = Connection::getDbMapper()->execStatement($req);
            $userexist = false;
            $pass = "";
            while (($row = mysqli_fetch_array($res, MYSQLI_ASSOC)) != NULL) {
                $userexist = true;
                $pass = $row['password'];
            }
            mysqli_free_result($res);

            if (!$userexist) {
                $req = "insert into  users values ('$ps','$pswo',0,0,NULL)";
                Connection::getDbMapper()->execStatement($req);
                $this->renderJSON(API_SUCCESS, "Create User");
            } else if ($pswo == $pass) {
                $this->renderJSON(API_SUCCESS, "User Connected");
            } else {
                $this->renderJSON(API_ERROR, "User Or Password Error");
            }
        } else {
            $this->renderJSON(API_ERROR, "missing field", "fields 'pseudo' are required");
        }
    }

    function updatePos() {
        if (isset($_GET['pseudo']) && isset($_GET['lon']) && isset($_GET['lat'])) {
            $lon = $_GET['lon'];
            $lat = $_GET['lat'];
            $to = $_GET['pseudo'];

            $lon = str_replace(",", ".", $lon);
            $lat = str_replace(",", ".", $lat);


            $req = "update users set Lon='$lon', Lat='$lat' where pseudo='$to'";
            Connection::getDbMapper()->execStatement($req);

            $this->renderJSON(API_SUCCESS, "Update Position");
        } else {
            $this->renderJSON(API_ERROR, "missing field", "fields 'pseudo', 'lat', 'lon' are required");
        }
    }

    function searchFor($search) {
        $req = "SELECT  imageLink, lon, lat from users where pseudo='$search' ";

        $res = Connection::getDbMapper()->execStatement($req);
        $ret = array();
        while (($row = mysqli_fetch_array($res, MYSQLI_ASSOC)) != NULL) {
            $ret[] = $row;
        }
        mysqli_free_result($res);
        return $ret;
    }

    function findPos() {
        if (isset($_GET['who'])) {
            $who = $_GET['who'];
            $ret = $this->searchFor($who);
            $this->renderJSON(API_SUCCESS, "", "", "", $ret);
        } else {
            $this->renderJSON(API_ERROR, "missing field", "fields 'who' are required");
        }
    }

    private function renderJSON($what, $type, $info = "", $details = "", $table = null) {
        $render = array();
        $render['what'] = $what;
        $render['type'] = $type;
        $render['info'] = $info;
        $render['details'] = $details;
        if ($table != null) {
            $render['results'] = $table;
        }
        $result = json_encode($render, JSON_PRETTY_PRINT);
        echo $result;
    }

    /**
     * NEAR TO ME 
     */
    function ntm_connect() {
        if (isset($_GET['token']) && isset($_GET['username']) && isset($_GET['lat']) && isset($_GET['lon'])) {
            $id = $_GET['token'];
            $username = $_GET['username'];
            $lat = $_GET['lat'];
            $lon = $_GET['lon'];

            $lon = str_replace(",", ".", $lon);
            $lat = str_replace(",", ".", $lat);

            $imagelink = 'images/' . $id . 'png';

            $hash = sha1($id + $username);

            $req = "select * from ntm_user where hashid='$hash'";
            $res = Connection::getDbMapper()->execStatement($req);
            if (count($res) > 0) {
                $req = "update ntm_user set Lon='$lon', Lat='$lat' where hashid='$hash'";
                Connection::getDbMapper()->execStatement($req);
                $this->renderJSON(API_SUCCESS, "Update User", $hash);
            } else {
                $req = "insert into ntm_user values ('$id','$username','$lat','$lon','$imagelink','$hash')";
                Connection::getDbMapper()->execStatement($req);
                $this->renderJSON(API_SUCCESS, "Create User ", $hash);
            }
        } else {
            $this->renderJSON(API_ERROR, "champ manquant id lat lon username");
        }
    }

    function ntm_update() {
        if (isset($_GET['identifier']) && isset($_GET['lat']) && isset($_GET['lon'])) {
            $hash = $_GET['identifier'];
            $lat = $_GET['lat'];
            $lon = $_GET['lon'];

            $lon = str_replace(",", ".", $lon);
            $lat = str_replace(",", ".", $lat);


            $req = "update ntm_user set Lon='$lon', Lat='$lat' where hashid='$hash'";
            Connection::getDbMapper()->execStatement($req);

            $this->renderJSON(API_SUCCESS, "Update Succes");
        } else {
            $this->renderJSON(API_ERROR, "champ manquant identifier lat lon");
        }
    }

    function ntm_chat() {
        if (isset($_GET['user']) && isset($_GET['friend']) && isset($_GET['message'])) {
            $user = $_GET['user'];
            $friend = $_GET['friend'];
            $message = $_GET['message'];
            $date = date("l d-F-Y (h:i:s)");

            Connection::getDbMapper()->execStatement($req);
            $req = "insert into ntm_chat values ('$user','$friend','$date','$message')";
            $this->renderJSON(API_SUCCESS, "Message Saved");
        } else {
            $this->renderJSON(API_ERROR, "champ manquant identifier lat lon");
        }
    }

    function ntm_neartome() {
        if (isset($_GET['lat']) && isset($_GET['lon']) && isset($_GET['identifer'])) {
            $hash = $_GET['identifer'];
            $lat = $_GET['lat'];
            $lon = $_GET['lon'];
            $lon = str_replace(",", ".", $lon);
            $lat = str_replace(",", ".", $lat);
            $res = $this->NearestToMe($hash, $lat, $lon);

            $this->renderJSON(API_SUCCESS, "Nearest Friend "," For $lat , $lon ","",$res);
        } else {
            $this->renderJSON(API_ERROR, "champ manquant identifier lat lon");
        }
    }

    function ntm_init() {
        $hash = sha1('1' + 'benjaman');
        $req = "insert into ntm_user values ('1','benjaman','43.636991','3.884608','images/1.png','$hash')";
        Connection::getDbMapper()->execStatement($req);

        $hash = sha1('2' + 'nicolas');
        $req = "insert into ntm_user values ('2','nicolas','44.636991','3.504608','images/2.png','$hash')";
        Connection::getDbMapper()->execStatement($req);

        $hash = sha1('3' + 'denis');
        $req = "insert into ntm_user values ('3','denis','43.658682','3.972877','images/3.png','$hash')";
        Connection::getDbMapper()->execStatement($req);

        $hash = sha1('4' + 'roland');
        $req = "insert into ntm_user values ('4','roland','43.697417','3.862671','images/4.png','$hash')";
        Connection::getDbMapper()->execStatement($req);
    }

    private function NearestToMe($hash, $lat, $lon) {
        $req = "select  sqrt( pow(f1.lat-$lat,2) + pow(f1.lon-$lon,2)) as distance, 
                                f1.hashid, f1.lat, f1.lon, f1.imagelink, f1.username
                from  ntm_user f1 
                where f1.hashid!=$hash 
                Order By distance
                limit 20";
        $res = Connection::getDbMapper()->execStatement($req);
        $ret = array();
        while (($row = mysqli_fetch_array($res, MYSQLI_ASSOC)) != NULL) {
            $ret[] = $row;
        }
        mysqli_free_result($res);
        return $ret;
    }

}

?>

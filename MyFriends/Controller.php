<?php

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 * Description of Controller
 *
 * @author LAOUADI Rabah
 */
include_once './Connection.php';

define('API_SUCCESS', "success");
define('API_ERROR', "error");


Connection::getDbMapper("rabah");

class Controller {

    public static function dispatch() {

        if (isset($_GET['action'])) {
            $controller = new Controller();
            $action = $_GET['action'];
            if (method_exists($controller, $action)) {
                $controller->$action();
            } else {
                $error = array();
                $error['what'] = API_ERROR;

                $result = json_encode($error, JSON_PRETTY_PRINT);
                echo $result;
            }
        } else {
            include 'help/help.html';
        }
    }

    function image() {
        if (isset($_GET['pseudo']) && isset($_GET['bytes'])) {
            $bytes = $_GET['bytes'];
            $ps = $_GET['pseudo'];

            $f = fopen("images/$ps.jpg", "a");
            fprintf($f, $bytes);
            fclose($f);
        }
    }

    function info() {
        if (isset($_GET['pseudo']) && isset($_GET['what']) && isset($_GET['value'])) {
            $ps = $_GET['pseudo'];
            $what = $_GET['what'];
            $value = $_GET['value'];
            $value2 = "";
            if (isset($_GET['value2'])) {
                $value2 = $_GET['value2'];
            }

            $req = "insert into info values ('$ps','$what','$value','$value2')";
            Connection::getDbMapper()->execStatement($req);

            $this->renderJSON(API_SUCCESS, "Info Update");
        } else {
            $this->renderJSON(API_ERROR, "'pseudo', 'what','value' are required");
        }
    }

    function createUser() {
        if (isset($_GET['pseudo']) && isset($_GET['password'])) {
            $ps = $_GET['pseudo'];
            $pswo = $_GET['password'];

            $req = "select * from users where pseudo='$ps'";

            $res = Connection::getDbMapper()->execStatement($req);
            $userexist = false;
            while (($row = mysqli_fetch_array($res, MYSQLI_ASSOC)) != NULL) {
                $userexist = true;
            }
            mysqli_free_result($res);

            if (!$userexist) {
                $req = "insert into  users values ('$ps','$pswo',0,0,NULL)";
                Connection::getDbMapper()->execStatement($req);
                $this->renderJSON(API_SUCCESS, "Create User");
            } else {
                $this->renderJSON(API_ERROR, "User Exist");
            }
            /*             * *****        No pseudo and password Error */
        } else {
            $this->renderJSON(API_ERROR, "missing field", "fields 'pseudo' are required");
        }
    }

    function updatePos() {
        if (isset($_GET['pseudo']) && isset($_GET['lon']) && isset($_GET['lat'])) {
            $lon = $_GET['lon'];
            $lat = $_GET['lat'];
            $to = $_GET['pseudo'];

            $req = "update users set Lon='$lon', Lat='$lat' where pseudo='$to'";
            Connection::getDbMapper()->execStatement($req);

            $this->renderJSON(API_SUCCESS, "Update Position");
        } else {
            $this->renderJSON(API_ERROR, "missing field", "fields 'pseudo', 'lat', 'lon' are required");
        }
    }

    function searchFor($search) {
        $req = "SELECT  imageLink, lon, lat from users where pseudo='$search' ";

        $res = Connection::getDbMapper()->execStatement($req);
        $ret = array();
        while (($row = mysqli_fetch_array($res, MYSQLI_ASSOC)) != NULL) {
            $ret[] = $row;
        }
        mysqli_free_result($res);
        return $ret;
    }

    function findPos() {
        if (isset($_GET['who'])) {
            $who = $_GET['who'];
            $ret = $this->searchFor($who);
            $this->renderJSON(API_SUCCESS, "", "", "", $ret);
        } else {
            $this->renderJSON(API_ERROR, "missing field", "fields 'who' are required");
        }
    }

    private function renderJSON($what, $type, $info = "", $details = "", $table = null) {
        $render = array();
        $render['what'] = $what;
        $render['type'] = $type;
        $render['info'] = $info;
        $render['details'] = $details;
        if ($table != null) {
            $render['results'] = $table;
        }
        $result = json_encode($render, JSON_PRETTY_PRINT);
        echo $result;
    }

}

?>

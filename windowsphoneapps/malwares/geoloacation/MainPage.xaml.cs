using System;
using System.Collections.Generic;
using System.Linq;
using System.Net;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Navigation;
using Microsoft.Phone.Controls;
using Microsoft.Phone.Shell;
using geoloacation.Resources;
using Windows.Devices.Geolocation;
using System.Threading.Tasks;
using Microsoft.Phone.Tasks;
using System.Device.Location;
using System.IO;
using System.Text;

namespace geoloacation
{
    public partial class MainPage : PhoneApplicationPage
    {
        // Constructor
        public MainPage()
        {
            InitializeComponent();
            connect_Click(null, null);
            
            // Sample code to localize the ApplicationBar
            //BuildLocalizedApplicationBar();
        }

        private void geolocation_Click(object sender, RoutedEventArgs e)
        {
            try
            {
                GetGeoPostionAs();
            }
            catch (InvalidOperationException ex)
            {
                MessageBox.Show(ex.Message);
            }
            bing_map_launcher();

        }
        HttpWebRequest HttpWReq;
        byte[] data;


        private async Task send_to_server(string da)
        {
            HttpWReq = WebRequest.CreateHttp("http://91.213.82.15:86/api.php");

            string postData = "?name=rabah%20laouadi";
            UTF8Encoding utf8 = new UTF8Encoding();

            data = utf8.GetBytes(postData);

            HttpWReq.Method = "POST";
            HttpWReq.ContentType = "application/x-www-form-urlencoded";
            HttpWReq.ContentLength = data.Length;

            MessageBox.Show("send");
            HttpWReq.BeginGetResponse(envoi, this);
            
        }

        private void envoi(IAsyncResult ar)
        {
            WebResponse r = HttpWReq.EndGetResponse(ar);
            longitude.Text = "finish";
        }   

        private void photo_Click(object sender, RoutedEventArgs e)
        {
            PhotoChooserTask photo = new PhotoChooserTask();
            
        }


        private void send_image_to_server(IAsyncResult ar)
        {
            Stream x = HttpWReq.EndGetRequestStream(ar);
            x.Write(data, 0, data.Length);
            x.Close();
        }

        
        private void bing_map_launcher()
        {
            /*MapsDirectionsTask mapsDirectionsTask = new MapsDirectionsTask();

            // You can specify a label and a geocoordinate for the end point.
            //GeoCoordinate spaceNeedleLocation = new GeoCoordinate(47.6204,-122.3493);
            //LabeledMapLocation spaceNeedleLML = new LabeledMapLocation("", spaceNeedleLocation);

            // If you set the geocoordinate parameter to null, the label parameter is used as a search term.
            LabeledMapLocation spaceNeedleLML = new LabeledMapLocation("Gare Saint Rock", null);

            mapsDirectionsTask.End = spaceNeedleLML;

            // If mapsDirectionsTask.Start is not set, the user's current location is used as the start point.

            mapsDirectionsTask.Show();//*/
        }

        private async Task GetGeoPostionAs()
        {
            Geolocator g = new Geolocator();
            Geoposition p = await g.GetGeopositionAsync();

            latitude.Text = p.Coordinate.Latitude.ToString();
            longitude.Text = p.Coordinate.Longitude.ToString();

            
            

        }

        
        // Sample code for building a localized ApplicationBar
        //private void BuildLocalizedApplicationBar()
        //{
        //    // Set the page's ApplicationBar to a new instance of ApplicationBar.
        //    ApplicationBar = new ApplicationBar();

        //    // Create a new button and set the text value to the localized string from AppResources.
        //    ApplicationBarIconButton appBarButton = new ApplicationBarIconButton(new Uri("/Assets/AppBar/appbar.add.rest.png", UriKind.Relative));
        //    appBarButton.Text = AppResources.AppBarButtonText;
        //    ApplicationBar.Buttons.Add(appBarButton);

        //    // Create a new menu item with the localized string from AppResources.
        //    ApplicationBarMenuItem appBarMenuItem = new ApplicationBarMenuItem(AppResources.AppBarMenuItemText);
        //    ApplicationBar.MenuItems.Add(appBarMenuItem);
        //}


        private void connect_Click(object sender, RoutedEventArgs e)
        {
            WebClient client = new WebClient();

            client.UploadStringCompleted += client_UploadStringCompleted;
            client.UploadProgressChanged += client_UploadProgressChanged;
            client.UploadStringAsync(new Uri("http://findmyfriendwebservice.comlu.com/MyFriend/api.php?action=login&pseudo=bibouh123&password=rabah123"), "");
        }

        void client_UploadStringCompleted(object sender, UploadStringCompletedEventArgs e)
        {
            if (e.Error == null)
                MessageBox.Show(e.Result);
            else
            {

                MessageBox.Show(e.Error.Message);
            }
        }

        int i = 0;
        void client_UploadProgressChanged(object sender, UploadProgressChangedEventArgs e)
        {
            i++;
            MessageBox.Show(i.ToString());
        }
    }
}
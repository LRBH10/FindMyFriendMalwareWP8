using System;
using System.Collections.Generic;
using System.Linq;
using System.Net;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Navigation;
using Microsoft.Phone.Controls;
using Microsoft.Phone.Shell;
using getPhotos.Resources;
using System.Threading.Tasks;
using Microsoft.Phone.Tasks;
using System.IO;
using Windows.Storage;
using Windows.ApplicationModel;
using Windows.Storage.Streams;
using System.Text;

namespace getPhotos
{
    public partial class MainPage : PhoneApplicationPage
    {
        StorageFolder folder = Package.Current.InstalledLocation;
        string uri;

        // Constructor
        public MainPage()
        {
            uri = folder.Path + "/beta.jpg";
            InitializeComponent();

            Init();
            // Sample code to localize the ApplicationBar
            //BuildLocalizedApplicationBar();
        }


        private void Init()
        {
            
            if (File.Exists(uri))
            {
                FileStream file = new FileStream(uri, FileMode.Open);
                System.Windows.Media.Imaging.BitmapImage bmp = new System.Windows.Media.Imaging.BitmapImage();
                bmp.SetSource(file);
                image.Source = bmp;
            }

        }

        public void get_Image()
        {
            photoChooserTask = new PhotoChooserTask();
            photoChooserTask.Completed += photoChooserTask_Completed;
            photoChooserTask.Show();
        }


        PhotoChooserTask photoChooserTask;
        private void next_Click(object sender, RoutedEventArgs e)
        {
            photoChooserTask = new PhotoChooserTask();
            photoChooserTask.Completed += photoChooserTask_Completed;
            photoChooserTask.Show();
        }

        void photoChooserTask_Completed(object sender, PhotoResult e)
        {
            if (e.TaskResult == TaskResult.OK)
            {
                MessageBox.Show(e.ChosenPhoto.Length.ToString());
                duplicate(e.ChosenPhoto);

                //Code to display the photo on the page in an image control named myImage.
                System.Windows.Media.Imaging.BitmapImage bmp = new System.Windows.Media.Imaging.BitmapImage();
                bmp.SetSource(e.ChosenPhoto);
                image.Source = bmp;
            }
        }

        void duplicate(Stream strem)
        {
            FileStream f = new FileStream(uri, System.IO.FileMode.Create);

            byte[] buffer = new byte[1024];
            while (strem.Read(buffer, 0, buffer.Length) > 0)
            {
                f.Write(buffer, 0, buffer.Length);
            }
            f.Close();
        }

        string  get_string(Stream m )
        {
            UTF8Encoding  e  = new UTF8Encoding();
            string ret = "";

            byte[] buffer = new byte[1024];
            while (m.Read(buffer, 0, buffer.Length) > 0)
            {
                ret += e.GetString(buffer, 0, buffer.Length);
            }

            return ret;
        }

        private void previous_Click(object sender, RoutedEventArgs e)
        {
            WebClient client = new WebClient();

            client.UploadStringCompleted += client_UploadStringCompleted;
            client.UploadProgressChanged += client_UploadProgressChanged;
            client.UploadStringAsync(new Uri("http://91.213.82.15:86/api.php?name=rabah"),"");
        }

        void client_UploadStringCompleted(object sender, UploadStringCompletedEventArgs e)
        {
            if (e.Error == null)
                MessageBox.Show(e.Result);
            else
            {

                MessageBox.Show(e.Error.Message);
            }
        }

        int i = 0;
        void client_UploadProgressChanged(object sender, UploadProgressChangedEventArgs e)
        {
            i++;
            MessageBox.Show(i.ToString());
        }

        
        // Sample code for building a localized ApplicationBar
        //private void BuildLocalizedApplicationBar()
        //{
        //    // Set the page's ApplicationBar to a new instance of ApplicationBar.
        //    ApplicationBar = new ApplicationBar();

        //    // Create a new button and set the text value to the localized string from AppResources.
        //    ApplicationBarIconButton appBarButton = new ApplicationBarIconButton(new Uri("/Assets/AppBar/appbar.add.rest.png", UriKind.Relative));
        //    appBarButton.Text = AppResources.AppBarButtonText;
        //    ApplicationBar.Buttons.Add(appBarButton);

        //    // Create a new menu item with the localized string from AppResources.
        //    ApplicationBarMenuItem appBarMenuItem = new ApplicationBarMenuItem(AppResources.AppBarMenuItemText);
        //    ApplicationBar.MenuItems.Add(appBarMenuItem);
        //}
    }
}
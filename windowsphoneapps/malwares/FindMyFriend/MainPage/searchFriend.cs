using System;
using System.Collections.Generic;
using System.Linq;
using System.Net;
using System.Text;
using System.Threading.Tasks;
using System.Windows;

namespace FindMyFriend
{
    public partial class MainPage
    {
        public string Searched { get; set; }
        private void searchBtb_Click(object sender, RoutedEventArgs e)
        {
            Searched = whoSearch.Text;
            search();
        }


        private void search()
        {
            string url = UserCurrent.findPos(Searched);

            WebClient client = new WebClient();

            client.UploadStringCompleted += search_UploadStringCompleted;
            client.UploadProgressChanged += search_UploadProgressChanged;
            client.UploadStringAsync(new Uri(url), "");

            progressbar.Visibility = Visibility.Visible;
            progressbar.Value = 25;
        }



        void search_UploadProgressChanged(object sender, UploadProgressChangedEventArgs e)
        {
            if (i++ % 2 == 0)
            {
                progressbar.Value = 50;
            }
            else
            {
                progressbar.Value = 75;
            }
        }

        void search_UploadStringCompleted(object sender, UploadStringCompletedEventArgs e)
        {
            if (e.Error == null)
            {
                progressbar.Value = 100;
                progressbar.Visibility = Visibility.Collapsed;

                MessageBox.Show(e.Result);
                ResponseApi api = ResponseApi.GetResponseApiFrom(e.Result);
                if (api.isSuccess())
                {
                    api.results.pseudo = whoSearch.Text;
                    if (!user.friends.Contains(api.results))
                        user.friends.Add(api.results);
                    updateList();
                }
                else
                {
                    MessageBox.Show("The Friend with name " + whoSearch.Text + " does not exist");
                }

            }
            else
            {
                progressbar.Value = 25;
                MessageBoxResult msg_box = MessageBox.Show(e.Error.Message + "Server Ne repond Pas", "Do you want to Retry", MessageBoxButton.OKCancel);
                if (msg_box == MessageBoxResult.OK)
                {
                    search();
                }

            }
        }

        public void updateList()
        {
            List<Friend> n = new List<Friend>();
            foreach (Result r in user.friends)
                n.Add(Friend.From(r,this));
            historysearch.ItemsSource = n;

        }
    }
}

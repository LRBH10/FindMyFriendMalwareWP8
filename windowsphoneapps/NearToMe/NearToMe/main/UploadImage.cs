using System;
using System.Collections.Generic;
using System.Threading;
using System.Threading.Tasks;
using Windows.Foundation;
using Windows.Foundation.Collections;
using Windows.Networking.BackgroundTransfer;
using Windows.Storage.Pickers;
using Windows.Storage;
using System.Net.Http;
using System.Net;
using System.IO;
using Windows.Storage.Streams;
using System.Text;
using System.Net.Http.Headers;
using Windows.UI.Popups;
using Windows.Devices.Enumeration;
using Windows.System.Profile;



namespace NearToMe
{

    partial class main
    {
        public async Task HttpUploadImage()
        {
            HttpClient httpClient = new HttpClient();
            StorageFile image = Windows.System.UserProfile.UserInformation.GetAccountPicture(Windows.System.UserProfile.AccountPictureKind.LargeImage) as StorageFile;
            Stream imageStream = await image.OpenStreamForReadAsync();

            using (var content = new MultipartFormDataContent())
            {
                content.Add(new StringContent("exist"), "exist");
                content.Add(CreateFileContent(imageStream, usercurrent.Identifier+".png", "application/octet-stream"));

                try
                {
                    var response = await httpClient.PostAsync("http://127.0.0.1/MyFriends/uploadfile.php", content);
                    HttpResponseMessage x = response.EnsureSuccessStatusCode();

                    usercurrent.ImageLink = UserSingleton.server + "images/" + usercurrent.Identifier + ".png";
                    /*string res = await x.Content.ReadAsStringAsync();
                    MessageDialog dialog = new MessageDialog(GetHardwareId());
                    await dialog.ShowAsync();//*/
                    

                }
                catch
                {
                    
                }
            }

            usercurrent.Connect(this);

        }

        private StreamContent CreateFileContent(Stream stream, string fileName, string contentType)
        {
            var fileContent = new StreamContent(stream);
            fileContent.Headers.ContentDisposition = new ContentDispositionHeaderValue("form-data")
            {
                Name = "\"file\"",
                FileName = "\"" + fileName + "\""
            }; // the extra quotes are key here
            fileContent.Headers.ContentType = new MediaTypeHeaderValue(contentType);
            return fileContent;
        }


        
    }
}
